
Primero, ¡tienes que implementar una clase! ¡Qué original!
Se llamará ClapTrap y tendrá los siguientes atributos privados inicializados
con los valores especificados entre corchetes:
• Nombre, que se pasa como parámetro a un constructor
• Puntos de vida (10), que representan la salud de ClapTrap
• Puntos de energía (10)
• Daño de ataque (0)
Añade las siguientes funciones miembro públicas para que ClapTrap parezca más realista:
• void attack(const std::string& target);
• void takeDamage(unsigned int amount);
• void beRepaired(unsigned int amount);
Cuando ClapTrap ataca, provoca que su objetivo pierda <daño de ataque> puntos de vida.
Cuando ClapTrap se repara a sí mismo, recupera <cantidad> puntos de vida. Atacar y reparar
cuestan 1 punto de energía cada uno. Por supuesto, ClapTrap no puede hacer nada si no tiene puntos de vida
o puntos de energía restantes.
En todas estas funciones miembro, debes imprimir un mensaje para describir lo que sucede. Por ejemplo, la función attack() puede mostrar algo como (por supuesto, sin
los corchetes angulares):
¡ClapTrap <nombre> ataca a <objetivo>, causando <daño> puntos de daño!
Los constructores y el destructor también deben mostrar un mensaje, para que tus compañeros evaluadores
puedan ver fácilmente que han sido llamados.
Implementa y entrega tus propias pruebas para asegurarte de que tu código funcione como se espera.
